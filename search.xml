<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2022/09/04/test/"/>
      <url>/2022/09/04/test/</url>
      
        <content type="html"><![CDATA[<p>测试新版本</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Gradle 下载缓慢解决方案</title>
      <link href="//articles/2019/12/09/1575870519853.html"/>
      <url>//articles/2019/12/09/1575870519853.html</url>
      
        <content type="html"><![CDATA[<h2 id="gradle-下载中央仓库依赖缓慢"><a href="#gradle-下载中央仓库依赖缓慢" class="headerlink" title="gradle 下载中央仓库依赖缓慢"></a>gradle 下载中央仓库依赖缓慢</h2><span id="more"></span><blockquote><p> <strong>.gradle</strong>  目录下创建文件  <strong>init.gradle</strong></p></blockquote><p>​</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">allprojects<span class="token punctuation">{</span>    repositories <span class="token punctuation">{</span>        <span class="token keyword">def</span> ALIYUN_REPOSITORY_URL <span class="token operator">=</span> <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public'</span>        <span class="token keyword">def</span> ALIYUN_JCENTER_URL <span class="token operator">=</span> <span class="token string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>        all <span class="token punctuation">{</span> ArtifactRepository repo <span class="token operator">-&gt;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>repo <span class="token keyword">instanceof</span> <span class="token class-name">MavenArtifactRepository</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">def</span> url <span class="token operator">=</span> repo<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://repo1.maven.org/maven2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">"Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_REPOSITORY_URL</span></span><span class="token string">."</span></span>                    remove repo                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://jcenter.bintray.com/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    project<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>lifecycle <span class="token interpolation-string"><span class="token string">"Repository </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token expression">repo<span class="token punctuation">.</span>url</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">ALIYUN_JCENTER_URL</span></span><span class="token string">."</span></span>                    remove repo                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        maven <span class="token punctuation">{</span>            url ALIYUN_REPOSITORY_URL            url ALIYUN_JCENTER_URL        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gradle-自身下载缓慢"><a href="#gradle-自身下载缓慢" class="headerlink" title="gradle 自身下载缓慢"></a>gradle 自身下载缓慢</h2><blockquote><p>2019年3月，Gradle开启了在中国地区的CDN，下载Gradle的distribution已经不需要翻墙。</p><p>修改项目gradle文件夹下面的gradle-wrapper.properties中的<a href="http://link.zhihu.com/?target=http://services.gradle.org">http://services.gradle.org</a>为<a href="http://link.zhihu.com/?target=http://downloads.gradle-dn.com">http://downloads.gradle-dn.com</a>即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Gradle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gralde </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用MacOS 10.14.6 Android  3.5.2 阅读Android O源码</title>
      <link href="//articles/2019/12/05/1575524671317.html"/>
      <url>//articles/2019/12/05/1575524671317.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用MacOS-10-14-6-Android-3-5-2-阅读Android-O源码"><a href="#使用MacOS-10-14-6-Android-3-5-2-阅读Android-O源码" class="headerlink" title="使用MacOS 10.14.6 Android  3.5.2 阅读Android O源码"></a>使用MacOS 10.14.6 Android  3.5.2 阅读Android O源码</h2><span id="more"></span><h3 id="创建大小写敏感磁盘"><a href="#创建大小写敏感磁盘" class="headerlink" title="创建大小写敏感磁盘"></a>创建大小写敏感磁盘</h3><ol><li><p>首先在磁盘工具中添加需要存储Android源码的宗卷，注意需要选择<strong>区分大小写</strong>，建议大于200G</p><p><img src="https://raw.githubusercontent.com/hienao/myImg/master/img20191205104625.png"></p></li></ol><h3 id="安装repo、下载源码"><a href="#安装repo、下载源码" class="headerlink" title="安装repo、下载源码"></a>安装repo、下载源码</h3><blockquote><p>android源码有数百个仓库，使用git管理的话不方便，所以官方编写了repo作为管理工具，用于过个git仓库间代码的同步</p></blockquote><ol><li><p>在当前目录下创建bin目录，用于安装repo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装repo工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sSL</span>  <span class="token string">'https://gerrit-googlesource.proxy.ustclug.org/git-repo/+/master/repo?format=TEXT'</span> <span class="token operator">|</span>base64 <span class="token parameter variable">-d</span> <span class="token operator">&gt;</span> ~/bin/repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>给repo执行权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> a+x ~/bin/repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将repo加入环境变量</p><ul><li><p>如果使用zsh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'export PATH=~/bin:$PATH'</span><span class="token operator">&gt;&gt;</span>~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用mac自带终端</p><pre class="line-numbers language-none"><code class="language-none">     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>进入指定磁盘（上面新建的大小写区分的那个）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /Volumes/AndroidO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>始化 Android源码 仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">repo init <span class="token parameter variable">-u</span> git://mirrors.ustc.edu.cn/aosp/platform/manifest <span class="token parameter variable">-b</span> android-10.0.0_r17<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>下载源码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">repo <span class="token function">sync</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：此过程较久要下好几十G的内容，会耗时比较久</p></li></ol><h3 id="编译源码，导入Android-Studio"><a href="#编译源码，导入Android-Studio" class="headerlink" title="编译源码，导入Android Studio"></a>编译源码，导入Android Studio</h3><blockquote><p>编译过程中建议使用bash命令切换到Mac控制，因为后面编译时如果遇到错误，需要用到的mmm命令无法在zsh中执行</p></blockquote><ol><li><p>先在命令行中输入’bash’切换到mac自带终端</p></li><li><p>进入源码所在的目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /Volumes/AndroidO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置编译所需变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> build/envsetup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置编译对象架构（这里可以选其他的任何一种，对于后面阅读源码无影响）</p><pre class="line-numbers language-none"><code class="language-none">lunch aosp_x86_64-eng<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>开始编译</p><pre class="line-numbers language-none"><code class="language-none">m -j8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：j8指的是同时进行编译的任务数，视cpu能力强弱调整，编译会产生100G以上的文件，可能需要数个小时，需要耐心等待</p></li><li><p>为 Android源码 生成 Android Studio 工程配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">development/tools/idegen/idegen.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：如果这里提示idegen.jar找不到，需要先执行 ‘ mmm development/tools/idegen/ ‘来生成idegen.jar，如果提示mmm命令未找到，说明没有切换到系统终端，参照第一条说明切换</p></li><li><p>生成结束后，使用Android Studio打开android.ipr 文件即可导入工程。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作为移动端开发怎么入门后端开发</title>
      <link href="//articles/2019/07/21/1563686924354.html"/>
      <url>//articles/2019/07/21/1563686924354.html</url>
      
        <content type="html"><![CDATA[<h2 id="大多数公司的现状"><a href="#大多数公司的现状" class="headerlink" title="大多数公司的现状"></a>大多数公司的现状</h2><span id="more"></span><p>1.场景A（格式）</p><p>移动端：老哥，要开发了，需要把接口给我。</p><p>后端：这个之前有给PC的接口，你直接调dubbo吧，你用那个字段就取哪个字段好了</p><p>移动端：？？？这么多字段哪个是我要的，为什么成功的时候这个字段返回的是个json对象、失败的时候返回了个字符串。</p><p>2.场景B （效率）</p><p>移动端：各位大佬，app这边这次项目中有个功能，需要用到订单、商品和物流的信息，这个接口我应该找谁要？</p><p>订单大佬：我这边只能给你订单的，其他的业务不该我去处理</p><p>商品大佬：我也是跟订单一样的。</p><p>移动端：这接口没人接了。。。</p><p>产品：。。。我去跟各个TL确认下，这接口归属哪边来开发</p><ol start="3"><li><p>场景C （在线问题解决）</p><p> 客满同学：线上app报错了，弹出了个错误提示</p><p> 若干分钟后。。。</p><p> 移动端：经过排查是xxx接口返回了错误信息，所以弹出了对应提示，功能不可用，接口责任人在订单同学那边，需要订单同学查下。</p><p> 若干分钟后。。。</p><p> 订单同学： 这个接口是个聚合接口，不只有订单的信息，看了下是调用xxx接口报错了，需要sss同学帮忙看下。</p><p> 若干分钟后。。。</p><p> sss同学：排查完毕，是今天发布导致的，已经回滚了，目前线上问题已修复</p><p> 此时已经过去了好几个若干分钟。</p></li></ol><h2 id="为什么移动端要对后端开发有所了解"><a href="#为什么移动端要对后端开发有所了解" class="headerlink" title="为什么移动端要对后端开发有所了解"></a>为什么移动端要对后端开发有所了解</h2><ol><li><p>作为移动端开发的小伙伴们平时要对接的开发侧的小伙伴，大多数时间段内都是后端开发的同学，了解后端开发的相关知识，可以有利于双方之间的沟通，大大减少双方沟通过程中“大眼瞪小眼”的尴尬场景，这也就是上面所说的场景A</p></li><li><p>虽然现在android官方推荐使用kotlin语言作为android的开发语言，但是绝大多数android的开发者都是使用java开发android入的坑，学习后端开发的时候开发语言上不需要重新学习一遍</p></li><li><p>app端作为直接面向用户的端，接口里的内容往往不是仅仅由一个提供方提供的，例如订单列表的借口中既会有订单相关的信息，也会有购买方的用户信息，还会有所购买的商品的信息，而在实际场景中，用户、订单、商品往往是由不同的部门负责的，这样的话给app端提供的接口的维护归属就有了分歧，任何一个改动都需要通知各方协调（场景B），当有线上问题出现时查询问题原因也需要大家共同去查，会浪费很多人力（场景C），如果各方只提供自己相关的数据，由app端自己去组合数据提供给app端，那么责任划分和查询问题就会轻松得多。</p></li><li><p>移动端开发也会需要自己的一些基础设施，如自动化构建的维护、跨平台内容的下发、热修复的管理这些都需要有自己的平台去完成，而开发这些平台最适合的莫过于我们这些移动开发人员，因为我们是使用方，更了解这些平台需要替我们完成什么样的功能</p></li></ol><h2 id="选择一个合适的框架"><a href="#选择一个合适的框架" class="headerlink" title="选择一个合适的框架"></a>选择一个合适的框架</h2><p>对于java后端的开发而言，不论是各种书籍还是网上的博客，基本都是在SSH和SSM两种组合开发框架中做选择。</p><blockquote><ul><li><p>SSH：Struts2 做控制器(controller) + Spring 管理组件 + Hibernate 负责数据库。</p></li><li><p>SSM: SpringMVC 做控制器(controller) + Spring 管理组件 + MyBatis 负责数据库。</p></li></ul></blockquote><p>SSH是比较早的项目使用的框架，在各类书籍里经常会见到，目前大多数公司使用的是SSM，如果之前对后端开发不太了解的同学，建议选择SSM好了，毕竟用的人多，遇到问题也容易找到解决方案。如果你对Spring繁琐的配置过程感到很头疼的话，建议使用SpringBoot来进行开发，因为它集齐了各类常用的开发框架，同时降低了 Spring 开发的门槛，更是简化了各种配置过程。</p><h2 id="后端开发用到了哪些知识"><a href="#后端开发用到了哪些知识" class="headerlink" title="后端开发用到了哪些知识"></a>后端开发用到了哪些知识</h2><p>相信每个最初接触后端开发的小伙伴都会跟我一样对后端复杂技术生态一脸懵逼，因为一上来就会接触到很多陌生的词汇，像spring 的ioc和aop、负责数据库操作的mybatis、缓存方面的redis等，甚至连该怎么创建都不清楚。这些。。。。。都是正常的，毕竟没什么人样样精通。对于后端项目开发的学习，以我自身的经历来讲可以这样进行：</p><ol><li>首先是搭建后端项目的框架，当然每个公司都会有自己的模板工程，部署完之后就可以跑起来，如果没有模版工程的小伙伴可以到<a href="https://start.spring.io/">https://start.spring.io/</a> 或者使用idea自动创建一个工程，</li></ol><p><img src="https://img.hacpai.com/file/2019/10/1559913011870-ac2b3a0b.png" alt="1559913011870.png"></p><p>start.spring.io自动生成工程只需要在这个页面上选择对应的条件就好了，之后把生成的工程导入idea就可以开发了</p><ol start="2"><li><p>工程可以跑起来之后就可以写提供给客户端的接口了，在这部分你需要学习创建controller、service、log日志的输出以及maven的依赖管理，学习这些看官方文档应该是最快的方案，<a href="https://docs.spring.io/spring-boot/docs/2.1.5.RELEASE/reference/htmlsingle/">https://docs.spring.io/spring-boot/docs/2.1.5.RELEASE/reference/htmlsingle/</a> 官方文档写的很详细，所以没必要单独为spring买一本书去学习，因为书肯定不如官网的文档更新的快，如果觉得英文不太方便的话，国内也是有中文翻译的文档版本的，可以参照<a href="https://love2.io/@funkkiid/doc/Spring-Boot-Reference-Guide/README.md">https://love2.io/@funkkiid/doc/Spring-Boot-Reference-Guide/README.md</a> 来学习。</p></li><li><p>相信经过上面的两部份你已经知道如何给客户端提供接口了，但是光是这些是不够的，因为给客户端需要的数据往往来自各个服务提供方，例如上面举的订单的例子。这里就需要我们从其他后端应用的服务获取数据，目前国内大多数公司使用阿里开源的dubbo框架来对外提供服务，所以在这里我们还需要学习dubbo的使用，由于dubbo框架是中国公司开源的，所以</p><p> [文档] &nbsp;<a href="https://dubbo.apache.org/zh-cn/">https://dubbo.apache.org/zh-cn/</a>&nbsp;</p><p> 有中文版，学习起来会比较方便</p></li><li><p>如果单纯是调用别人的服务来整合数据的话，上面三部分学习知识已经可以满足你的要求了。如果有涉及到app独立的数据需要持久化存储的话，还需要学习Mysql相关的知识以及Mybatis的使用。</p></li><li><p>随着后端工程业务逐渐复杂，你可能还需要学习更多的内容来完成自己的需求，：</p><ul><li><p>缓存方面：redis</p></li><li><p>权限方面：shiro、spring security</p></li><li><p>代理服务：Nginx</p></li><li><p>消息：ActiveMQ</p></li><li><p>数据库连接池：druid</p></li><li><p>定时任务：Quartz</p></li><li><p>爬虫：WebMagic </p><p>  其实这些都是可选的，用到的时候再去学习就ok了</p></li></ul></li></ol><h2 id="有赞移动后端基础设施的工作"><a href="#有赞移动后端基础设施的工作" class="headerlink" title="有赞移动后端基础设施的工作"></a>有赞移动后端基础设施的工作</h2><p>对于有赞移动端的基础设施的工作我们主要做了以下的内容：</p><ol><li>App网关，虽然项目名称是网关，但是跟后端通常所指的网关不相同，这是一个专门给App这边提供接口的应用，开始所说的三种场景的问题，这里都能够很好的解决，因为后端同学大多说是不了解app开发的，更多的小伙伴给App提供接口的时候会按照给前端网页提供接口的方法给接口，这种场景下app这边调用起来就会比较麻烦，在App网关中App端的小伙伴自己给app端提供接口，由App端自行维护这个应用，这样的话中台的小伙伴只需要提供自己那部分基础服务就好了，完全不需要考虑提供出去接口的格式和接口归属的划分，同时出现线上问题App端的小伙伴也可以直接定位到是哪个服务出现了问题，可以减少线上故障的时间</li><li>MBD，由于业务线比较多</li><li>Weex构建平台</li><li>配置中心</li><li>移动基础保障平台</li></ol><h2 id="感触-amp-区别"><a href="#感触-amp-区别" class="headerlink" title="感触&amp;区别"></a>感触&amp;区别</h2><ol><li>客户端的开发更加注重的是用户的体验，是用户操作时的具体感受，面向的是单个用户，而服务端开发更注重的是功能和数据，是线上功能的可用性及数据的准确性。</li><li>虽然客户端和后端都会考虑应用的性能，但是两者侧重点不同，客户端更看重用户使用的感知，如动画效果及滑动流畅性，而后端更看重的是运行效率和并发能力。</li><li>客户端在开发的过程中并发的场景比较少，切换线程一类的操作比较多，而服务端刚好相反，服务端场景下用户并发的场景会很多，线程切换类的操作倒是不如客户端那么频繁了，这与系统的限制及面对的场景相关，客户端只面对一个用户和服务端，而服务端需要面对多个用户。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debain docker 安装jenkins</title>
      <link href="//articles/2019/07/21/1563686685303.html"/>
      <url>//articles/2019/07/21/1563686685303.html</url>
      
        <content type="html"><![CDATA[<h2 id="换成国内源"><a href="#换成国内源" class="headerlink" title="换成国内源"></a>换成国内源</h2><span id="more"></span><ul><li><p>备份原有的源配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.listbak <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除该源配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-f</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>生成国内的源配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.cn.debian.org/debian/ stretch main"</span> <span class="token operator">&gt;</span> /etc/apt/sources.list<span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.cn.debian.org/debian/ stretch-updates main"</span> <span class="token operator">&gt;&gt;</span> /etc/apt/sources.list <span class="token builtin class-name">echo</span> <span class="token string">"deb http://ftp.cn.debian.org/debian-security stretch/updates main"</span> <span class="token operator">&gt;&gt;</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>更新源</p><pre class="line-numbers language-none"><code class="language-none">apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h2><ul><li><p>curl</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">curl</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>wget</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">wget</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>vim</p><pre class="line-numbers language-none"><code class="language-none">apt-get install vim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>jdk</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> openjdk-8-jdk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="安装jenkins（root权限）"><a href="#安装jenkins（root权限）" class="headerlink" title="安装jenkins（root权限）"></a>安装jenkins（root权限）</h2><ul><li><p>Import the GPG keys of the Jenkins repository</p><p>root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-q</span> <span class="token parameter variable">-O</span> - https://pkg.jenkins.io/debian/jenkins.io.key <span class="token operator">|</span> apt-key <span class="token function">add</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>非root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-q</span> <span class="token parameter variable">-O</span> - https://pkg.jenkins.io/debian/jenkins.io.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>add the Jenkins repository to your system<br>root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>非root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Update the <code>apt</code> package list and install the latest version of Jenkins by running</p><p>root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>非root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Start the Jenkins service and enable it to automatically start on boot</p><p>root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start jenkinssystemctl <span class="token builtin class-name">enable</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>非root权限使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start jenkins<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Jekins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql在分页查询的时候，出现数据重复</title>
      <link href="//articles/2019/07/21/1563685500863.html"/>
      <url>//articles/2019/07/21/1563685500863.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>场景：每页分为10条数据，发现第4页的一条信息在第3页也会显示。</p></blockquote><blockquote><p>原因：查看sql，发现order by后面的字段值在数据中不是唯一的，所以在后面就又加了一个可以保证数据唯一的字段，问题就解决了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Android 7.0上PopupWindow.showAsDropDown位置偏移</title>
      <link href="//articles/2019/07/21/1563685841566.html"/>
      <url>//articles/2019/07/21/1563685841566.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>解决方案：<br>用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                       popupWindow<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                       <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> location <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                       view<span class="token punctuation">.</span><span class="token function">getLocationOnScreen</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token keyword">int</span> x <span class="token operator">=</span> location<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                       <span class="token keyword">int</span> y <span class="token operator">=</span> location<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                       popupWindow<span class="token punctuation">.</span><span class="token function">showAtLocation</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token class-name">Gravity</span><span class="token punctuation">.</span><span class="token constant">NO_GRAVITY</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">+</span> view<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>替换：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">popupWindow<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在部分机型上上述方法无效，可以尝试另一种方案：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">Rect</span> rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mView<span class="token punctuation">.</span><span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> h <span class="token operator">=</span> mView<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>heightPixels <span class="token operator">-</span> rect<span class="token punctuation">.</span>bottom<span class="token punctuation">;</span>                popWindow<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            categoryWindow<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>categoryView<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">PhoneUtils</span><span class="token punctuation">.</span><span class="token function">dp2px</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 URL Scheme 或android intent唤起应用打开指定的 Activity</title>
      <link href="//articles/2019/07/21/1563685613681.html"/>
      <url>//articles/2019/07/21/1563685613681.html</url>
      
        <content type="html"><![CDATA[<p>Android 开发过程中经常会有 H5 页面和 Native 的交互，常见的如在网页中打开淘宝app到商品界面，还有在组件化工程中模块间通过路由调用有时候也是使用这种方案。</p><span id="more"></span><p>通过 URL 协议打开页面的应用场景大致有以下几种：</p><blockquote><ul><li>从 H5 页面打开 APP 的某个页面</li><li>从其他应用打开 APP 的某个页面</li><li>从组件化工程中的一个组件调用另一个组件</li><li>点击通知栏消息推送，跳转至某个页面</li></ul></blockquote><h2 id="Android-URL-Scheme-格式"><a href="#Android-URL-Scheme-格式" class="headerlink" title="Android URL Scheme 格式"></a>Android URL Scheme 格式</h2><pre class="line-numbers language-none"><code class="language-none">Scheme://Host:Port/Path?Query=Value<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取Scheme Uri方式如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Uri</span> uri <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>参数名称</th><th>描述</th><th>可省略</th><th>获取</th></tr></thead><tbody><tr><td>Scheme</td><td>协议</td><td>否</td><td>uri.getScheme()</td></tr><tr><td>Host</td><td>地址</td><td>是</td><td>uri.getHost()</td></tr><tr><td>Port</td><td>端口</td><td>是</td><td>uri.getPort()</td></tr><tr><td>Path</td><td>页面</td><td>是</td><td>uri.getPath()</td></tr><tr><td>Query</td><td>参数</td><td>是</td><td>uri.getQuery()或者uri.getQueryParameterNames()</td></tr></tbody></table><h2 id="清单文件"><a href="#清单文件" class="headerlink" title="清单文件"></a>清单文件</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.GoodActivity<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span>            <span class="token attr-name"><span class="token namespace">android:</span>host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>taobao<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/router<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8888<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tb<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.BROWSABLE<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.VIEW<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="网页调用"><a href="#网页调用" class="headerlink" title="网页调用"></a>网页调用</h2><ul><li>Chrome for Android &lt;= 18的情况下</li></ul><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tb://taobao:8888/router?token=fgdsfgsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在 Chrome for Android &gt;= 25 的环境下，可以使用 Chrome Intent 来调起 Android App<br>  格式说明如下：</li></ul><pre class="line-numbers language-none"><code class="language-none">intent:HOST/URI-path // Optional host#Intent;package=[string];action=[string];category=[string];component=[string]; scheme=[string];end;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如mainfest 中activity定义如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.business.headline.ui.HeadlineWebviewActivity<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>screenOrientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>portrait<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>windowSoftInputMode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>adjustResize<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.VIEW<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.BROWSABLE<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span>                    <span class="token attr-name"><span class="token namespace">android:</span>host</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>headline<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/webview<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ddd<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：只有添加了<code> &lt;category android:name="android.intent.category.BROWSABLE"/&gt;</code>的activity才可以被intent唤起</p></blockquote><p>然后在浏览器中点击a标签，就可以启动应用程序的对应activity了，如果手机中没有相应的应用，那么是否会跳转到错误页面呢，将a标签设置为</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>intent://headline/webview#Intent;scheme=ddd;package=com.qima.kdt;S.url=https://www.baidu.com;end<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Do Whatever<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样如果没有对应应用，该链接就会跳转到S.browser_fallback_url指定的url上。<br>如果我们还需要对在a标签中对指定activity进行传值，可以将a标签设置为：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>intent://headline/webview#Intent;scheme=ddd;package=com.qima.kdt;S.url=https://www.baidu.com;S.img=http://img.baidu.com/xxx.png;S.title=我是标题的;I.id=207;end<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Do Whatever<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中参数类型说明：</p><pre class="line-numbers language-none"><code class="language-none">String =&gt; 'S'Boolean =&gt;'B'Byte =&gt; 'b'Character =&gt; 'c'Double =&gt; 'd'Float =&gt; 'f'Integer =&gt; 'i'Long =&gt; 'l'Short =&gt; 's'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析参数的方案：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Bundle</span> parametros<span class="token operator">=</span>intent<span class="token punctuation">.</span><span class="token function">getExtras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>parametros<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               url <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>parametros<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               mContentId <span class="token operator">=</span> parametros<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               mContentTitle <span class="token operator">=</span> parametros<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               mContentImgUrl <span class="token operator">=</span> parametros<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原生调用"><a href="#原生调用" class="headerlink" title="原生调用"></a>原生调用</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_VIEW</span><span class="token punctuation">,</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"tb://taobao:8888/router?token=fgdsfgsd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="判断一个-Scheme-是否有效"><a href="#判断一个-Scheme-是否有效" class="headerlink" title="判断一个 Scheme 是否有效"></a>判断一个 Scheme 是否有效</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">PackageManager</span> packageManager <span class="token operator">=</span> <span class="token function">getPackageManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">ACTION_VIEW</span><span class="token punctuation">,</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"tb://taobao:8888/router?token=fgdsfgsd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResolveInfo</span><span class="token punctuation">&gt;</span></span> activities <span class="token operator">=</span> packageManager<span class="token punctuation">.</span><span class="token function">queryIntentActivities</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> isValid <span class="token operator">=</span> <span class="token operator">!</span>activities<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，很多第三方浏览器会拦截掉chrome intent启动应用的请求，像uc，微信内置浏览器，QQ浏览器等，在这些页面要做一个提示，让用户跳转到源生的浏览器上才能打开应用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot Annotion processor not found in classpath 解决方案</title>
      <link href="//articles/2019/07/21/1563685380508.html"/>
      <url>//articles/2019/07/21/1563685380508.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>从yml文件中读取配置时，在使用@configurationProperties注解时 idea弹出 Spring Boot Annotion processor not found in classpath</p></blockquote><span id="more"></span><ul><li>原因：使用了高版本的springBoot，ConfigurationProperties注解，在springboot 1.5版本之后去掉了location属性，我们采用<br>PropertySource注解指定配置文件路径，而这个配置文件对于yml的解析时是有问题的，因此我们得对其进行处理</li><li>解决方案：新建一个YamlPropertySourceFactory类实现配置文件的工厂类PropertySourceFactory重写其中的方法</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YamlPropertySourceFactory</span> <span class="token keyword">implements</span> <span class="token class-name">PropertySourceFactory</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">PropertySource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">createPropertySource</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">EncodedResource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">PropertySourcesLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">PropertySourcesLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>                resource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getNameForResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getNameForResource</span><span class="token punctuation">(</span><span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">String</span> name <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            name <span class="token operator">=</span> resource<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"@"</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">identityHashCode</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并在读取配置的注解上添加上该factory：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"classpath:/application.yml"</span><span class="token punctuation">,</span>factory <span class="token operator">=</span> <span class="token class-name">YamlPropertySourceFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${person.lastName}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> lastName<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${person.age}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Person{"</span> <span class="token operator">+</span>                <span class="token string">"lastName='"</span> <span class="token operator">+</span> lastName <span class="token operator">+</span> <span class="token char">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token char">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitignore规则不生效的解决办法</title>
      <link href="//articles/2019/07/21/1563685075320.html"/>
      <url>//articles/2019/07/21/1563685075320.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是.gitignore只能忽略那些原来没有被追踪的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未被追踪状态），然后再提交：</p><blockquote><p>git rm -r –cached .<br>git add .<br>git commit -m ‘update .gitignore’</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android studio 不同module资源重名引起引用混乱的解决方法</title>
      <link href="//articles/2019/07/21/1563642782144.html"/>
      <url>//articles/2019/07/21/1563642782144.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><blockquote><p>解决方案：</p><ol><li>通过gradle配置</li></ol></blockquote><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span> provided <span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token punctuation">:</span> ‘libs’<span class="token punctuation">,</span> include<span class="token punctuation">:</span> <span class="token punctuation">[</span>‘<span class="token operator">*.</span>jar’<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>2.右键module选择open module setting,选择要修改的module名，切换到dependencies页面，将要修改的jar的scope修改provided模式。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装zsh后 vim ~/.bash_profile无效的问题</title>
      <link href="//articles/2019/07/21/1563686080206.html"/>
      <url>//articles/2019/07/21/1563686080206.html</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>装了 zsh 之后，修改终端配置就变成了：<code>vim ~/.zshrc</code>，而不是：<code>vim ~/.bash_profile</code>，所以以后看到别人的文章中需要：<code>vim ~/.bash_profile</code>，那你自己要变通思想过来。</li><li>同时更新修改后的配置文件也从：<code>source ~/.bash_profile</code>，变成了：<code>source ~/.zshrc</code>。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title> Android项目开发中遇到的问题记录</title>
      <link href="//articles/2019/07/21/1563643014546.html"/>
      <url>//articles/2019/07/21/1563643014546.html</url>
      
        <content type="html"><![CDATA[<ol><li>Android 6.0 解决recyclerview 在 scrollview 中不能全部显示，高度不正常的问题。</li></ol><ul><li>问题描述：在Android 6.0上如果recyclerview被scrollerview包裹且设置高度为wrap_content，在recyclerviewitem足够多的情况下会只显示一部分item。<span id="more"></span>    </li><li>解决方案：最终 stackoverflow 找到了解决办法：<br><a href="http://"></a><a href="http://stackoverflow.com/questions/27083091/recyclerview-inside-scrollview-is-not-working">http://stackoverflow.com/questions/27083091/recyclerview-inside-scrollview-is-not-working</a></li><li>解决办法：在 recyclerview 外面再包一层 RelativeLayout<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>descendantFocusability</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blocksDescendants<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!-- DEV NOTE: Outer wrapper relative layout is added intentionally to address issue                 that only happens on Marshmallow &amp; Nougat devices (API 23 &amp; 24).                 On marshmallow API 23, the "RecyclerView" `layout_height="wrap_content"` does NOT                 occupy the height of all the elements added to it via adapter. The result is cut out                 items that is outside of device viewport when it loads initially.                 Wrapping "RecyclerView" with "RelativeLayout" fixes the issue on Marshmallow devices.            --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.v7.widget.RecyclerView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/my_recycler_view<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">tools:</span>listitem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@layout/row_list_item<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.v7.widget.RecyclerView</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ol start="2"><li>当使用的图片控件为CircleImagview的时候，Glide设置placeholder会出现第一次加载图片失败，当你再次刷新的时候，才能展现出图片</li></ol>  <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Glide</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imgurl<span class="token punctuation">)</span>             <span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>default_photo<span class="token punctuation">)</span>             <span class="token punctuation">.</span><span class="token function">diskCacheStrategy</span><span class="token punctuation">(</span><span class="token class-name">DiskCacheStrategy</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">)</span>             <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleTarget</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GlideDrawable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token annotation punctuation">@Override</span>                 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span><span class="token class-name">GlideDrawable</span> resource<span class="token punctuation">,</span> <span class="token class-name">GlideAnimation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">GlideDrawable</span><span class="token punctuation">&gt;</span></span> glideAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     mCivUserPhoto<span class="token punctuation">.</span><span class="token function">setImageDrawable</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>关于Fragment（XXFragment） not attached to Activity 异常<br>  出现该异常，是因为Fragment的还没有Attach到Activity时，调用了如getResource()等，需要上下文Content的函数。实际情况中大多数是因为网络还未返回数据时，activity由于各种原因销毁重建导致该问题出现。<br>  解决方法：</li></ol><ul><li>将调用的代码写在OnStart（）中</li><li>在调用context处，如<code>getResources().getString(R.string.app_name);</code><br> 之前增加一个判断isAdded()或者 isVisible()</li></ul><ol start="4"><li>使用viewpager时报错<blockquote><p>FragmentManager is already executing transactions<br>报错在<code>viewPager.setOffscreenPageLimit(5);</code></p></blockquote> 解决方案：将原有的</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">FragmentStatePagerAdapter</span> adapter <span class="token operator">=</span>        <span class="token keyword">new</span> <span class="token class-name">FragmentStatePagerAdapter</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fragments<span class="token punctuation">,</span> titleList<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>替换为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">FragmentStatePagerAdapter</span> adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FragmentStatePagerAdapter</span><span class="token punctuation">(</span><span class="token function">getChildFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fragments<span class="token punctuation">,</span>titleList<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取Android自带资源的方式</title>
      <link href="//articles/2019/07/21/1563686419890.html"/>
      <url>//articles/2019/07/21/1563686419890.html</url>
      
        <content type="html"><![CDATA[<p>资源位置在源代码base/core/res/文件夹中</p><span id="more"></span><ul><li>获取string</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> lebId <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token string">"permlab_accessNetworkState"</span><span class="token punctuation">,</span>                 <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token string">"android"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> lab <span class="token operator">=</span> <span class="token function">getString</span><span class="token punctuation">(</span>lebId<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>name：资源名称。</p><p>defType：资源类型。<br>defPackage：资源所在包。</p><ul><li><p>资源类型：</p><blockquote><p>R.anim、R.animator、R.array、R.attr、R.bool、R.color、R.dimen、R.drawable、R.fraction、R.id、R.integer、R.interpolator、R.layout、R.menu、R.mipmap、R.plurals、R.raw、R.string、R.style、R.styleable、R.transition、R.xml</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹弹play安卓版更新日志</title>
      <link href="//articles/2019/07/21/1563686205251.html"/>
      <url>//articles/2019/07/21/1563686205251.html</url>
      
        <content type="html"><![CDATA[<h1 id="弹弹play安卓版更新日志"><a href="#弹弹play安卓版更新日志" class="headerlink" title="弹弹play安卓版更新日志"></a>弹弹play安卓版更新日志</h1><span id="more"></span><ul><li>2.3.9 (2017-08-12)<ol><li>修复几处可能导致崩溃的bug</li></ol></li><li>2.3.8 (2017-08-09)<ol><li>添加了弹幕速度设置</li><li>视频Id本地存储、匹配过一次弹幕第二次就不用再选了（如果需要重新选择请在视频列表项上长按选择重新匹配）</li><li>修复文件名过长显示不全的问题</li></ol></li><li>2.3.7 (2017-07-2)<ol><li>修复部分视频弹幕重复问题</li></ol></li><li>2.3.6 (2017-06-11)<ol><li>修复部分在少数机型上会导致崩溃的bug</li></ol></li><li>2.3.5 (2017-05-13)<ol><li>初次安装或者未检测到文件时提示进行下拉刷新</li><li>播放时屏幕初始亮度自动读取上次的设置，如果从来没设置过则以最低亮度播放</li><li>弹幕缩放设置</li><li>弹幕透明度</li><li>缩略图获取优化</li><li>修复部分导致崩溃的bug</li></ol></li><li>2.3.1 (2017-03-05)<ol><li>重新编译播放器解码库，增添更多解码模式，mkv等等支持了</li><li>UI改动</li><li>扫描方式改动，外置sd卡暂时不扫描(原因为外置SDK没有写权限无法保存弹幕文件)</li></ol></li><li>2.2.4 (2017-02-26)<ol><li>修改app图标和名称，与弹弹playPC版保持一致</li></ol></li><li>2.2.3 (2017-02-23)<ol><li>修复2.2.2扫描导致崩溃的bug</li></ol></li><li>2.2.2 (2017-02-22)<ol><li>重复弹幕合并</li><li>可在主页面右上角点击手动添加视频文件</li><li>在文件管理器中点击视频文件后，可选择”用弹幕播放器打开”将视频信息手动添加到列表中</li><li>视频列表添加长按删除功能</li><li>设置中可选是否自动播放</li><li>播放视频时可以调到上次播放的进度</li><li>修复部分bug<br>  ps:部分用户因为手机系统的原因，手机文件修改媒体库并不会刷新，2、3功能主要是提供给这部分用户，能正常扫描到媒体文件的用户可以无视</li></ol></li><li>2.2.0beta (2017-02-13)<ol><li>更换视频sdk(实现了切换屏幕比例)</li><li>修复视频倒序排列bug</li><li>设置可以切换扫描内置存储或外置存储，切换存储扫描路径后要重新扫描</li><li>可以发送弹幕了，要在在线模式下才能发送（重要：模式切换在文件列表右上角）</li></ol></li><li>2.0.1 (2017-02-06)<ol><li>更换接口</li><li>优化性能</li><li>修复bug</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 弹弹Play </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DanDanPlay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 9.0 sdk导致的gradle依赖问题解决</title>
      <link href="//articles/2019/07/21/1563640603661.html"/>
      <url>//articles/2019/07/21/1563640603661.html</url>
      
        <content type="html"><![CDATA[<h5 id="Bug表现"><a href="#Bug表现" class="headerlink" title="Bug表现"></a>Bug表现</h5><span id="more"></span><ul><li><p>今天在项目开发中，编译工程时，突然出现了一个莫名的错误提示，即:</p><blockquote><p>ERROR: In <declare-styleable> FontFamilyFont, unable to find attribute android:fontVariationSettings<br>ERROR: In <declare-styleable> FontFamilyFont, unable to find attribute android:ttcIndex</declare-styleable></declare-styleable></p></blockquote></li></ul><h5 id="可能原因"><a href="#可能原因" class="headerlink" title="可能原因"></a>可能原因</h5><ul><li><p>通过StackOverFlow上查询得知，出现这种情况的原因共有两种：</p><ol><li>可能是compileSdkVersion与targetSdkVersion的版本不一致。</li><li>可能是工程中依赖的com.android.support:support-v4 (或support-v7) 版本不一致。</li></ol></li><li><p>解决方案：第一种将compileSdkVersion与targetSdkVersion的版本改成一致即可，这个原因跟我工程里面的状况不符合，我的工程里都是26，所以略过。</p><p>第二种检查方法比较简单，在AndroidStudio的终端Terminal里输入<code>gradle app:dependencies</code>来打印gradle来检查gradle依赖，发现corelib module里，有一个控件依赖如下：</p><pre class="line-numbers language-none"><code class="language-none">+--- cn.qqtheme.framework:WheelPicker:1.1.3|  |    +--- cn.qqtheme.framework:Common:1.1.3|  |    |    +--- com.android.support:support-v4:+ -&gt; 26.1.0 (*)|  |    |    \--- com.android.support:support-annotations:+ -&gt; 28.0.0-alpha1|  |    +--- com.android.support:support-v4:+ -&gt; 26.1.0 (*)|  |    \--- com.android.support:support-annotations:+ -&gt; 28.0.0-alpha1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到com.android.support:support-annotations的版本依赖被调整为了28.0.0-alpha1版本，应该就是这个问题了，那么需要到cn.qqtheme.framework:WheelPicker的引入部分将</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">api <span class="token punctuation">(</span><span class="token string">'cn.qqtheme.framework:WheelPicker'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">api <span class="token punctuation">(</span><span class="token string">'cn.qqtheme.framework:WheelPicker'</span><span class="token punctuation">)</span><span class="token punctuation">{</span> exclude group<span class="token punctuation">:</span> <span class="token string">'com.android.support'</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后重新编译，问题即可解决。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级老的Android项目gradle版本后，出现错误提示</title>
      <link href="//articles/2019/07/21/1563685717070.html"/>
      <url>//articles/2019/07/21/1563685717070.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Configuration on demand is not supported by the current version of the Android Gradle plugin since you are using Gradle version 4.6 or above. Suggestion: disable configuration on demand by setting org.gradle.configureondemand=false in your gradle.properties file or use a Gradle version less than 4.6.</p></blockquote><span id="more"></span><p>按提示配置<code>org.gradle.configureondemand=false</code>后并没有什么卵用。。。。</p><p>从网上发现了以下设置步骤可以关闭`org.gradle.configureondemand：</p><ol><li><p>在gradle.properties删除org.gradle.configureondemand设置</p></li><li><p>Windows：File &gt; Settings &gt; Build, Execution, Deployment &gt; Compiler，去掉configure on demand的勾选</p><p>Mac：Android Studio&gt;Prefrence&gt; Build, Execution, Deployment &gt; Compiler，去掉configure on demand的勾选</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> AndroidStudio </category>
          
          <category> Gradle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> AndroidStudio </tag>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举根据状态获取不同属性及在Android开发中优先使用注解，慎用枚举</title>
      <link href="//articles/2019/07/21/1563686304195.html"/>
      <url>//articles/2019/07/21/1563686304195.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>    <span class="token function">SUCCESS</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"成功"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">FAIL</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> mCode<span class="token punctuation">;</span>    <span class="token class-name">String</span> mText<span class="token punctuation">;</span>    <span class="token class-name">Status</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        mCode<span class="token operator">=</span>i<span class="token punctuation">;</span>        mText<span class="token operator">=</span>s<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Status</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Status</span> status<span class="token operator">:</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span>status<span class="token punctuation">.</span>mCode<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> status<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token constant">FAIL</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Status</span> status<span class="token operator">:</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span>mText<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">成功失败Process finished with <span class="token builtin class-name">exit</span> code <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="优先使用注解，慎用枚举"><a href="#优先使用注解，慎用枚举" class="headerlink" title="优先使用注解，慎用枚举"></a>优先使用注解，慎用枚举</h4><ol><li>原因</li></ol><blockquote><p>与静态常量相比，枚举会增大应用程序编译后的 dex 文件，同时应用在运行时的内存占用也会升高。在资源有限的移动设备上，大量的使用枚举无疑是致命的。</p></blockquote><ol start="2"><li><p>寻找替代方案</p><ul><li><p>使用常量替换枚举</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatusConstants</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">FAIL</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token class-name">StatusConstants</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token class-name">StatusConstants</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token class-name">StatusConstants</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">StatusConstants</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>      上述代码达到了和枚举一样的效果，完全可以不使用枚举。可是，让我再回到使用枚举的好处：</code></pre></li><li><p>保证了类型安全：调用者无法随意传一个 int 值；</p></li><li><p>代码可读性非常高；<br> 反过来对比看，向上面那样使用常量会有什么问题:</p></li><li><p>首先，我们无法保障类型安全，用户可以在调用时传入任何一个 int 值：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">doSth</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>其次代码可读性很差，IDE 只是提示传入 int 类型的参数。此时如果不看方法体，调用者根本不知道该传什么值。</p></li></ul></li><li><p>接下来就要使用注解来解决这个问题了。</p><ul><li>引入注解库</li></ul><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">compile <span class="token string">'com.android.support:support-annotations:25.0.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>建立状态注解</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">SOURCE</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">PARAMETER</span><span class="token punctuation">)</span><span class="token annotation punctuation">@IntDef</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token constant">FAIL</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>调用函数</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatusHelper</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Status</span> <span class="token keyword">int</span> status<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token operator">:</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>测试：</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">doSth</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里会显示红色错误</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然显示红色错误，但仍可以执行，不过这样已经起到警告的作用了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu上编译ijkplayer</title>
      <link href="//articles/2019/07/21/1563685985973.html"/>
      <url>//articles/2019/07/21/1563685985973.html</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要编译ijkplayer"><a href="#为什么要编译ijkplayer" class="headerlink" title="为什么要编译ijkplayer?"></a>为什么要编译ijkplayer?</h2><span id="more"></span><blockquote><p>因为官方的Ijkplayer库是大多数项目中会用到的格式，如果不需要那么多格式，想要减小apk的体积、或者需要的格式比较多就需要重新编译了。</p></blockquote><p>##编译环境</p><blockquote><p>系统：Ubuntu Kylin 16.04 LTS（我是装在win10系统下的虚拟机里的）</p></blockquote><h2 id="先看下官方给出的步骤"><a href="#先看下官方给出的步骤" class="headerlink" title="先看下官方给出的步骤"></a>先看下官方给出的步骤</h2><blockquote><p>原文参见：<a href="https://github.com/Bilibili/ijkplayer">https://github.com/Bilibili/ijkplayer</a></p></blockquote><h3 id="Before-Build"><a href="#Before-Build" class="headerlink" title="Before Build"></a>Before Build</h3><pre class="line-numbers language-none"><code class="language-none"># install homebrew, git, yasmruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"brew install gitbrew install yasm# add these lines to your ~/.bash_profile or ~/.profile# export ANDROID_SDK=&lt;your sdk path&gt;# export ANDROID_NDK=&lt;your ndk path&gt;# on Cygwin (unmaintained)# install git, make, yasm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>If you prefer more codec/format</p><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-default.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>If you prefer less codec/format for smaller binary size (include hevc function)</p><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-lite-hevc.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>If you prefer less codec/format for smaller binary size (by default)</p><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-lite.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>For Ubuntu/Debian users.</p><pre class="line-numbers language-none"><code class="language-none"># choose [No] to use bashsudo dpkg-reconfigure dash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>If you’d like to share your config, pull request is welcome.</p></li></ul><h3 id="Build-Android"><a href="#Build-Android" class="headerlink" title="Build Android"></a>Build Android</h3><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-androidcd ijkplayer-androidgit checkout -B latest k0.7.9./init-android.shcd android/contrib./compile-ffmpeg.sh clean./compile-ffmpeg.sh allcd .../compile-ijk.sh all# Android Studio:#     Open an existing Android Studio project#     Select android/ijkplayer/ and import##     define ext block in your root build.gradle#     ext {#       compileSdkVersion = 23       // depending on your sdk version#       buildToolsVersion = "23.0.0" // depending on your build tools version##       targetSdkVersion = 23        // depending on your sdk version#     }## If you want to enable debugging ijkplayer(native modules) on Android Studio 2.2+: (experimental)#     sh android/patch-debugging-with-lldb.sh armv7a#     Install Android Studio 2.2(+)#     Preference -&gt; Android SDK -&gt; SDK Tools#     Select (LLDB, NDK, Android SDK Build-tools,Cmake) and install#     Open an existing Android Studio project#     Select android/ijkplayer#     Sync Project with Gradle Files#     Run -&gt; Edit Configurations -&gt; Debugger -&gt; Symbol Directories#     Add "ijkplayer-armv7a/.externalNativeBuild/ndkBuild/release/obj/local/armeabi-v7a" to Symbol Directories#     Run -&gt; Debug 'ijkplayer-example'#     if you want to reverse patches:#     sh patch-debugging-with-lldb.sh reverse armv7a## Eclipse: (obselete)#     File -&gt; New -&gt; Project -&gt; Android Project from Existing Code#     Select android/ and import all project#     Import appcompat-v7#     Import preference-v7## Gradle#     cd ijkplayer#     gradle<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Build-iOS"><a href="#Build-iOS" class="headerlink" title="Build iOS"></a>Build iOS</h3><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-ioscd ijkplayer-iosgit checkout -B latest k0.7.9./init-ios.shcd ios./compile-ffmpeg.sh clean./compile-ffmpeg.sh all# Demo#     open ios/IJKMediaDemo/IJKMediaDemo.xcodeproj with Xcode# # Import into Your own Application#     Select your project in Xcode.#     File -&gt; Add Files to ... -&gt; Select ios/IJKMediaPlayer/IJKMediaPlayer.xcodeproj#     Select your Application's target.#     Build Phases -&gt; Target Dependencies -&gt; Select IJKMediaFramework#     Build Phases -&gt; Link Binary with Libraries -&gt; Add:#         IJKMediaFramework.framework##         AudioToolbox.framework#         AVFoundation.framework#         CoreGraphics.framework#         CoreMedia.framework#         CoreVideo.framework#         libbz2.tbd#         libz.tbd#         MediaPlayer.framework#         MobileCoreServices.framework#         OpenGLES.framework#         QuartzCore.framework#         UIKit.framework#         VideoToolbox.framework##         ... (Maybe something else, if you get any link error)# <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="接下来我们开始自己的编译"><a href="#接下来我们开始自己的编译" class="headerlink" title="接下来我们开始自己的编译"></a>接下来我们开始自己的编译</h2><h3 id="1-安装Java环境（已有可跳过）"><a href="#1-安装Java环境（已有可跳过）" class="headerlink" title="1.安装Java环境（已有可跳过）"></a>1.安装Java环境（已有可跳过）</h3><ul><li>保险起见请先在终端执行一次一下代码</li></ul><pre class="line-numbers language-none"><code class="language-none">sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后检查是否安装了jdk<pre class="line-numbers language-none"><code class="language-none">java -version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>如果出现了下面的输出结果，意味着你并没有安装过Java:</li></ul><pre class="line-numbers language-none"><code class="language-none">The program 'java' can be found in the following packages: * default-jre * gcj-4.9-jre-headless * gcj-5-jre-headless * openjdk-8-jre-headless * gcj-4.8-jre-headless * openjdk-9-jre-headlessTry: sudo apt install &lt;selected package&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>安装jdk命令如下：</li></ul><pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository ppa:webupd8team/javasudo apt-get updatesudo apt-get install oracle-java8-installersudo apt-get install oracle-java8-set-default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>安装成功后执行上面检查jdk的命令会看到如下输出：<pre class="line-numbers language-none"><code class="language-none">java version "1.8.0_121"Java(TM) SE Runtime Environment (build 1.8.0_121-b13)Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>到这里jdk就安装完成了</li></ul><p>###2. 安装android开发SDK和NDK</p><ul><li>首先新建一个文件夹，用来存放sdk和ndk(这步骤看个人习惯，可以放到其他目录去，我新建的目录名称是“Android”)：</li></ul><pre class="line-numbers language-none"><code class="language-none">mkdir Android<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后下载android的sdk:</li></ul><pre class="line-numbers language-none"><code class="language-none">cd Android/wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgztar -zxvf android-sdk_r24.4.1-linux.tgzecho 'export ANDROID_HOME="'$HOME'/Android/android-sdk-linux"' &gt;&gt; ~/.bashrcecho 'export PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"' &gt;&gt; ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>然后重新打开终端，让环境变量生效。启动Android SDK Manager</li></ul><pre class="line-numbers language-none"><code class="language-none">android <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>之后来安装NDK：</li></ul><pre class="line-numbers language-none"><code class="language-none">cd Android/wget https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zipunzip android-ndk-r14b-linux-x86_64.zipecho 'export ANDROID_NDK="'$HOME'/Android/android-ndk-r14b"' &gt;&gt; ~/.bashrcecho 'export PATH="$PATH:$ANDROID_NDK"' &gt;&gt; ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>重启系统（到这步时不重启就不生效，也许只是我这里的个例）</p></li><li><p>启动终端，执行</p></li></ul><pre class="line-numbers language-none"><code class="language-none">ndk-build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>若出现以下提示（只要没提示命令不存在就应该是安装成功了），这说明环境变量设置成功</code></pre><pre class="line-numbers language-none"><code class="language-none">Android NDK: Could not find application project directory !    Android NDK: Please define the NDK_PROJECT_PATH variable to point to it.    /home/swart/Android/android-ndk-r14b/build/core/build-local.mk:151: *** Android NDK: Aborting    .  Stop.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>###3. 安装git、yasm</p><pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository ppa:git-core/ppasudo apt-get updatesudo apt-get install git  sudo apt-get install yasm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>安装下载完成后，可以使用下面的命令行，确认git和yasm是否安装成功，如果成功的话不会输出命令不存在的提示</li></ul><pre class="line-numbers language-none"><code class="language-none">git --version make<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>###3. 正式开工、开始编译（以Android为例IOS、请参照官方文档即可）</p><ul><li>从git上拉取ijkplayer的源码：</li></ul><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/Bilibili/ijkplayer.git ijkplayer-androidcd ijkplayer-androidgit checkout -B latest k0.7.9#调整编译的类型的话需要在这行代码所在的位置做调整，调整方式在下面./init-android.shcd android/contrib./compile-ffmpeg.sh clean./compile-ffmpeg.sh allcd .../compile-ijk.sh all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>调整编译类型</p><p> 如果你需要支持更多的格式</p></li></ul><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-default.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你需要较少的格式以便减小体积（支持hevc）</p><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-lite-hevc.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你需要较少的格式以便减小体积（默认选择）</p><pre class="line-numbers language-none"><code class="language-none">cd configrm module.shln -s module-lite.sh module.shcd android/contrib# cd iossh compile-ffmpeg.sh clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>对于Ubuntu/Debian的用户<pre class="line-numbers language-none"><code class="language-none"># choose [No] to use bashsudo dpkg-reconfigure dash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><ul><li>编译完成后在/ijkplayer-android/android/ijkplayer目录下就生成了各个平台上所需的so文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> IjkPlayer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> IjkPlayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins Android 开发持续集成配置</title>
      <link href="//articles/2019/07/21/1563685214519.html"/>
      <url>//articles/2019/07/21/1563685214519.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>Jenkins Android编译环境配置 ：略</p><span id="more"></span><p><img src="https://raw.githubusercontent.com/hienao/hienao.github.io/blog_img/img/20190116102943.png"></p></li><li><p>配置Jenkins编译设置</p><ul><li><p>参数化构建过程：</p><ul><li><p>此处为设置android工程中的Gradle参数的，详见project 下的<code>gradle.properties</code>文件，如果工程中没有且需要动态指定参数的话可以自己创建一个，例子如下图所示：</p><p><img src="https://raw.githubusercontent.com/hienao/hienao.github.io/blog_img/img/20190116102709.png"></p><p>参数以K-V键值对的方式写入即可。这些参数只是演示，如果工程中不需要，参数化构建过程可以不设置。</p></li></ul></li><li><p>源码管理</p><ul><li>选择Git或者SVN并输入账号密码即可，略。</li></ul></li><li><p>构建触发器</p><ul><li><p>Poll SCM 用于执行定时任务，每隔一段时间检测一次svn代码是否有变化，如果有变化就重新编译apk，途中设置的是每5分钟检测一次：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">H/5 * * * *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>构建</p><ul><li><p>选择gradle版本，指定编译task，一般而言直接按照自己的需求复制我下面的例子即可：</p><p>正式包：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">clean assembleRelease<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试包：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">clean assembleDebug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>正式&amp;测试包：</p><pre class="line-numbers language-groovy" data-language="groovy"><code class="language-groovy">clean build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>构建后操作：</p><ul><li><p>用于存档的文件(需要按照自己的工程修改):</p><pre class="line-numbers language-none"><code class="language-none">trunk/TransfarMobileOA/app/build/outputs/apk/release/*.apk,trunk/TransfarMobileOA/app/build/outputs/mapping/**/mapping.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>上传到Fir.im或者蒲公英</p><ul><li><p>Fir.im  需安装插件</p><p>fir.im Token  填入你在firim的apitoken即可。</p></li><li><p>蒲公英</p><p>在”构建”步骤中的Execute shell 处填写如下参数，按照自己工程修改即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-F</span> <span class="token string">"file=@<span class="token variable">${WORKSPACE}</span>/trunk/TransfarMobileOA/app/build/outputs/apk/debug/transfar_oa_debug.apk"</span> <span class="token parameter variable">-F</span> <span class="token string">"uKey=你的蒲公英UserKey"</span> <span class="token parameter variable">-F</span> <span class="token string">"_api_key=你的蒲公英APItoken"</span> http://www.pgyer.com/apiv1/app/upload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中file部分对照修改为自己工程打包Apk所在位置就好。</p></li></ul></li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> Jekins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
